import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

public class Parser {
	private Document dom = null;
	private ArrayList<Libro> libros = null;
	
	public Parser() {
		libros = new ArrayList<Libro>();
	}
	
	public void parseFileXML(String file) {
		DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();

		try {
			DocumentBuilder db = dbf.newDocumentBuilder();
			
			dom = db.parse(file);
		} catch (ParserConfigurationException pce) {
			pce.printStackTrace();
		} catch (SAXException se) {
			se.printStackTrace();
		} catch (IOException ioe) {
			ioe.printStackTrace();
		}
	}
	
	public void parseDocument() {
		Element docEle = dom.getDocumentElement();
		
		NodeList nl = docEle.getElementsByTagName("libro");
		
		if(nl != null && nl.getLength() > 0) {
			for(int i = 0; i < nl.getLength(); i++) {
				Element el = (Element) nl.item(i);
				
				Libro libr = getLibro(el);
				
				libros.add(libr);
			}
		}
	}
	
	private Libro getLibro(Element libroEle) {
		String titulo = getTextValue(libroEle, "titulo");
		String nombreAutor = getTextValue(libroEle, "nombre");
		String editor = getTextValue(libroEle, "editor");
		int paginas = getIntValue(libroEle, "paginas");
		//int anyo = getIntValue(libroEle, "anyo");
		
		Libro libr = new Libro(titulo, nombreAutor, editor, paginas);
		
		return libr;
	}
	
	private String getTextValue(Element ele, String tagName) {
		String textValue = null;
		NodeList nl = ele.getElementsByTagName(tagName);
		
		for(int i = 0; i < nl.getLength(); i++) {
			Element el = (Element) nl.item(i);
			
			if(nl != null && nl.getLength() > 0) {
				
				if(el.hasAttributes()) {
					String anyoEl = el.getAttribute("anyo");
					textValue = anyoEl;
				}
				
				String elValue = el.getFirstChild().getNodeValue();
				textValue = elValue;
			}

		}
		return textValue;
	}
	
	private int getIntValue(Element ele, String tagName) {				
		return Integer.parseInt(getTextValue(ele,tagName));
	}
	
	public void print(){
		Iterator it = libros.iterator();
		while(it.hasNext()) {
			Libro libr = (Libro) it.next();
			libr.print();
		}
	}
}
